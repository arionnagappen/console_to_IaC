name: Deploy CDK Application

on: 
  pull_request:
    branches:
      - '*'

jobs:
  test-synth-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Install Dependencies
      - name: Install dependencies
        run: npm install
        working-directory: cdk-app/

      # Run Unit Tests
      - name: Run unit tests
        run: npm test
        working-directory: cdk-app/

      # Synthesize CDK App
      - name: Synthesize CDK
        run: npx cdk synth
        working-directory: cdk-app/

      # Admin Access with Key-Pairs
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: af-south-1

      # Check for CDK Bootstrap
      - name: Check if CDK is Bootstrapped
        id: bootstrap-check
        run: |
          if aws cloudformation describe-stacks --region af-south-1 --stack-name CDKToolkit > /dev/null 2>&1; then
            echo "CDKToolkit already exists"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "CDKToolkit does NOT exist"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        working-directory: cdk-app/

      # CDK Bootstrap
      - name: CDK Bootstrap
        if: steps.bootstrap-check.outputs.exists == 'false'
        run: npx cdk bootstrap
        working-directory: cdk-app/
        
      # Deploy CDK App
      - name: CDK Deploy
        run: npx cdk deploy --all --require-approval never
        working-directory: cdk-app/

      # Destroy CDK App
      - name: CDK Destroy
        run: npx cdk destroy --all --force
        working-directory: cdk-app/

      